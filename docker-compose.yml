version: "3.8"
name: auth

services:
   caddy:
     image: caddy:latest
     container_name: auth_caddy
     env_file:
       - .env
     ports:
      - "80:80"
      - "443:443"
     volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./certs:/caddy/certs
     depends_on:
      - auth_service
     networks:
      - auth
      - front_some-net

#   nginx:
#     build:
#       context: .
#       dockerfile: "Dockerfile.nginx"
#     container_name: auth_nginx
#     depends_on:
#       - auth_service
#     ports:
#      - "80:80"
#      - "443:443"
#     networks:
#       - auth

   auth_service:
     build:
       context: .
       dockerfile: Dockerfile
     container_name: auth_service
     env_file:
       - .env
     depends_on:
       - db_auth
       - redis_auth
       - celery_auth
     command: ["sh", "-c", "alembic upgrade head && uvicorn app.main:app --port=8000 --host=0.0.0.0"]
     networks:
       - auth
#     ports:
#       - 8000:8000

   db_auth:
    image: postgres:15
    container_name: db_auth
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - auth
    # restart: unless-stopped

   redis_auth:
    image: redis:7
    container_name: redis_auth
    networks:
      - auth

   celery_auth:
     image: celery:arm64v8
     build:
       context: .
     container_name: celery_auth
     # command: [ "./scripts/celery.sh", "celery_app" ]
     command: sh -c "celery --app=app.tasks.celery_app:celery_app worker -l INFO"
     env_file:
       - .env
     depends_on:
       - redis_auth
     networks:
       - auth

networks:
   auth:
    name: auth
    driver: bridge
   front_some-net:
    external: true